@using HowClient.Services.Provider
@using Microsoft.AspNetCore.Components.Authorization
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject CustomStateProvider AuthStateProvider

<CascadingAuthenticationState>
    <div class="page">
        <div class="sidebar">
            <NavMenu />
        </div>
    
        <main>
            <div class="top-row px-4">
                <a href="https://docs.microsoft.com/aspnet/" target="_blank">About</a>
                <button type="button" class="btn btn-link ml-md-auto" @onclick="@LogoutClick">Logout</button>
            </div>
    
            <article class="content px-4">
                @Body
            </article>
        </main>
    </div>
</CascadingAuthenticationState>

@functions{

    [CascadingParameter]
    Task<AuthenticationState> AuthenticationState { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (AuthenticationState is not null)
        {
            var authState = await AuthenticationState;
            if (authState.User.Identity is not null)
            {
                if (!authState.User.Identity.IsAuthenticated)
                {
                    // NavigationManager.NavigateTo("/login");
                }
            }
        }
    }

    async Task LogoutClick()
    {
        await AuthStateProvider.Logout();
        NavigationManager.NavigateTo("/login");
    }

}