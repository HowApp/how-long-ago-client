@page "/login"
@using HowClient.Common.Routing
@using HowClient.Services.Provider
@using HowClient.Infrastructure.DTO.Auth
@layout AuthLayout
@inject NavigationManager NavigationManager
@inject CustomStateProvider AuthStateProvider

<h1 class="h2 font-weight-normal login-title">
    Login
</h1>

<div class="row">
    <div class="col-md-6">
        <EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="LoginRequest">
            <DataAnnotationsValidator/>

            <label for="inputUserName" class="sr-only">User Name</label>
            <InputText id="inputUserName" class="form-control" @bind-Value="LoginRequest.Email" autofocus placeholder="Username"/>
            <ValidationMessage For="@(() => LoginRequest.Email)"/>

            <label for="inputPassword" class="sr-only">Password</label>
            <InputText id="inputPassword" class="form-control" @bind-Value="LoginRequest.Password" autofocus placeholder="Password"/>
            <ValidationMessage For="@(() => LoginRequest.Password)"/>

            <div class="form-check m-3">
                <InputCheckbox id="inputRememberMe" class="form-check-input" @bind-Value="@LoginRequest.RememberMe"/>
                <label class="form-check-label" for="inputRememberMe">Remember Me</label>
            </div>

            <button class="btn btn-lg btn-primary btn-block" type="submit">Sign in</button>

            <label class="text-danger">@Error</label>

            <NavLink href=@Rout.Registration>
                <h6 class="font-weight-normal text-center">Create account</h6>
            </NavLink>
        </EditForm>
    </div>
    <div class="text-center col-md-6">
        <NavLink href="/">
            <img src="logo.webp" class="rounded mx-auto d-block" alt="Project Icon" style="max-height: 450px"/>
        </NavLink>
    </div>
</div>

@code {
    LoginRequestDTO LoginRequest { get; set; } = new LoginRequestDTO();
    string Error { get; set; }

    async Task OnSubmit()
    {
        Error = null;

        try
        {
            await AuthStateProvider.Login(LoginRequest);
            NavigationManager.NavigateTo("");
        }
        catch (Exception e)
        {
            Error = e.Message;
        }
    }
}